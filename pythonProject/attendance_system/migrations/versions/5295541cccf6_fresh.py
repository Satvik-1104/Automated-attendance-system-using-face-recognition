"""fresh

Revision ID: 5295541cccf6
Revises: 
Create Date: 2025-03-13 00:03:11.560312

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5295541cccf6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sections',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('section_name', sa.String(length=10), nullable=False),
    sa.Column('batch', sa.Integer(), nullable=False),
    sa.Column('course_code', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('section_id')
    )
    op.create_table('valid_faculty',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('employee_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('valid_phd_students',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('employee_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('valid_students',
    sa.Column('roll_number', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('roll_number'),
    sa.UniqueConstraint('email')
    )
    op.create_table('class_schedules',
    sa.Column('schedule_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('course_code', sa.String(length=10), nullable=False),
    sa.Column('day_of_week', sa.String(length=10), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('classroom', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['sections.section_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('schedule_id')
    )
    op.create_index(op.f('ix_class_schedules_section_id'), 'class_schedules', ['section_id'], unique=False)
    op.create_table('faculty',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['valid_faculty.employee_id'], ),
    sa.PrimaryKeyConstraint('employee_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('phd_students',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['valid_phd_students.employee_id'], ),
    sa.PrimaryKeyConstraint('employee_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('students',
    sa.Column('roll_number', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('branch', sa.String(length=3), nullable=False),
    sa.Column('semester', sa.Integer(), nullable=False),
    sa.Column('batch', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('photo_folder', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['roll_number'], ['valid_students.roll_number'], ),
    sa.PrimaryKeyConstraint('roll_number'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('attendance_reports',
    sa.Column('report_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roll_number', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('course_code', sa.String(length=10), nullable=False),
    sa.Column('class_time', sa.DateTime(), nullable=False),
    sa.Column('is_absent', sa.Boolean(), nullable=True),
    sa.Column('correction_applied', sa.Boolean(), nullable=True),
    sa.Column('marked_by_faculty', sa.Integer(), nullable=True),
    sa.Column('marked_by_phd', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['marked_by_faculty'], ['faculty.employee_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['marked_by_phd'], ['phd_students.employee_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['roll_number'], ['students.roll_number'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['section_id'], ['sections.section_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_index(op.f('ix_attendance_reports_report_id'), 'attendance_reports', ['report_id'], unique=False)
    op.create_index(op.f('ix_attendance_reports_roll_number'), 'attendance_reports', ['roll_number'], unique=False)
    op.create_index(op.f('ix_attendance_reports_section_id'), 'attendance_reports', ['section_id'], unique=False)
    op.create_table('class_schedule_access',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.Column('phd_student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty.employee_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['phd_student_id'], ['phd_students.employee_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['schedule_id'], ['class_schedules.schedule_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_class_schedule_access_faculty_id'), 'class_schedule_access', ['faculty_id'], unique=False)
    op.create_index(op.f('ix_class_schedule_access_phd_student_id'), 'class_schedule_access', ['phd_student_id'], unique=False)
    op.create_index(op.f('ix_class_schedule_access_schedule_id'), 'class_schedule_access', ['schedule_id'], unique=False)
    op.create_table('dynamic_schedule_updates',
    sa.Column('update_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.Column('update_type', sa.String(length=20), nullable=False),
    sa.Column('new_day_of_week', sa.String(length=10), nullable=True),
    sa.Column('new_start_time', sa.Time(), nullable=True),
    sa.Column('new_end_time', sa.Time(), nullable=True),
    sa.Column('new_classroom', sa.String(length=50), nullable=True),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('update_timestamp', sa.DateTime(), nullable=True),
    sa.Column('updated_by_faculty', sa.Integer(), nullable=True),
    sa.Column('updated_by_phd', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['schedule_id'], ['class_schedules.schedule_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by_faculty'], ['faculty.employee_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_phd'], ['phd_students.employee_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('update_id')
    )
    op.create_index(op.f('ix_dynamic_schedule_updates_schedule_id'), 'dynamic_schedule_updates', ['schedule_id'], unique=False)
    op.create_table('entry_exit_times',
    sa.Column('entry_exit_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roll_number', sa.Integer(), nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.Column('entry_time', sa.DateTime(), nullable=False),
    sa.Column('exit_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['roll_number'], ['students.roll_number'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['schedule_id'], ['class_schedules.schedule_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('entry_exit_id')
    )
    op.create_index(op.f('ix_entry_exit_times_roll_number'), 'entry_exit_times', ['roll_number'], unique=False)
    op.create_index(op.f('ix_entry_exit_times_schedule_id'), 'entry_exit_times', ['schedule_id'], unique=False)
    op.create_table('otp_verifications',
    sa.Column('otp_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('otp_code', sa.String(length=6), nullable=False),
    sa.Column('expiry_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('user_type', sa.String(length=20), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.Column('phd_id', sa.Integer(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty.employee_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['phd_id'], ['phd_students.employee_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.roll_number'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('otp_id')
    )
    op.create_table('student_sections',
    sa.Column('roll_number', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['roll_number'], ['students.roll_number'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['section_id'], ['sections.section_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('roll_number', 'section_id')
    )
    op.create_index(op.f('ix_student_sections_roll_number'), 'student_sections', ['roll_number'], unique=False)
    op.create_index(op.f('ix_student_sections_section_id'), 'student_sections', ['section_id'], unique=False)
    op.create_table('attendance_corrections',
    sa.Column('correction_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roll_number', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('course_code', sa.String(length=10), nullable=False),
    sa.Column('request_time', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('correction_status', sa.String(length=20), nullable=True),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('supporting_image', sa.String(length=255), nullable=True),
    sa.Column('processed_by_faculty', sa.Integer(), nullable=True),
    sa.Column('processed_by_phd', sa.Integer(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['processed_by_faculty'], ['faculty.employee_id'], ),
    sa.ForeignKeyConstraint(['processed_by_phd'], ['phd_students.employee_id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['attendance_reports.report_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['roll_number'], ['students.roll_number'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['section_id'], ['sections.section_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('correction_id')
    )
    op.create_index(op.f('ix_attendance_corrections_correction_id'), 'attendance_corrections', ['correction_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_attendance_corrections_correction_id'), table_name='attendance_corrections')
    op.drop_table('attendance_corrections')
    op.drop_index(op.f('ix_student_sections_section_id'), table_name='student_sections')
    op.drop_index(op.f('ix_student_sections_roll_number'), table_name='student_sections')
    op.drop_table('student_sections')
    op.drop_table('otp_verifications')
    op.drop_index(op.f('ix_entry_exit_times_schedule_id'), table_name='entry_exit_times')
    op.drop_index(op.f('ix_entry_exit_times_roll_number'), table_name='entry_exit_times')
    op.drop_table('entry_exit_times')
    op.drop_index(op.f('ix_dynamic_schedule_updates_schedule_id'), table_name='dynamic_schedule_updates')
    op.drop_table('dynamic_schedule_updates')
    op.drop_index(op.f('ix_class_schedule_access_schedule_id'), table_name='class_schedule_access')
    op.drop_index(op.f('ix_class_schedule_access_phd_student_id'), table_name='class_schedule_access')
    op.drop_index(op.f('ix_class_schedule_access_faculty_id'), table_name='class_schedule_access')
    op.drop_table('class_schedule_access')
    op.drop_index(op.f('ix_attendance_reports_section_id'), table_name='attendance_reports')
    op.drop_index(op.f('ix_attendance_reports_roll_number'), table_name='attendance_reports')
    op.drop_index(op.f('ix_attendance_reports_report_id'), table_name='attendance_reports')
    op.drop_table('attendance_reports')
    op.drop_table('students')
    op.drop_table('phd_students')
    op.drop_table('faculty')
    op.drop_index(op.f('ix_class_schedules_section_id'), table_name='class_schedules')
    op.drop_table('class_schedules')
    op.drop_table('valid_students')
    op.drop_table('valid_phd_students')
    op.drop_table('valid_faculty')
    op.drop_table('sections')
    # ### end Alembic commands ###
